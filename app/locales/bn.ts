import { getClientConfig } from "../config/client";
import { SubmitKey } from "../store/config";
import { SAAS_CHAT_UTM_URL } from "@/app/constant";

const isApp = !!getClientConfig()?.isApp;

const bn = {
  WIP: "ржПржЗ ржлрж┐ржЪрж╛рж░ржЯрж┐ ржПржЦржиржУ ржЙржирзНржиржпрж╝ржирзЗрж░ ржкрж░рзНржпрж╛ржпрж╝рзЗ ржЖржЫрзЗ...",
  Error: {
    Unauthorized: isApp
      ? `ЁЯШЖ ржХржерзЛржкржХржержирзЗ ржХрж┐ржЫрзБ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржЪрж┐ржирзНрждрж╛ ржХрж░ржмрзЗржи ржирж╛:
       \\ 1я╕ПтГг ржХрзЛржирзЛ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЫрж╛ржбрж╝рж╛ржЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржи, [ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзЗ ржХржерзЛржкржХржержи рж╢рзБрж░рзБ ржХрж░рзБржи ЁЯЪА](${SAAS_CHAT_UTM_URL})
       \\ 2я╕ПтГг ржпржжрж┐ ржЖржкржирж┐ ржЖржкржирж╛рж░ ржирж┐ржЬрзЗрж░ OpenAI рж░рж┐рж╕рзЛрж░рзНрж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржи, [ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи](/#/settings) рж╕рзЗржЯрж┐ржВрж╕ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ тЪЩя╕П`
      : `ЁЯШЖ ржХржерзЛржкржХржержирзЗ ржХрж┐ржЫрзБ рж╕ржорж╕рзНржпрж╛ рж╣ржпрж╝рзЗржЫрзЗ, ржЪрж┐ржирзНрждрж╛ ржХрж░ржмрзЗржи ржирж╛:
       \ 1я╕ПтГг ржХрзЛржирзЛ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЫрж╛ржбрж╝рж╛ржЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржи, [ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзЗ ржХржерзЛржкржХржержи рж╢рзБрж░рзБ ржХрж░рзБржи ЁЯЪА](${SAAS_CHAT_UTM_URL})
       \ 2я╕ПтГг ржпржжрж┐ ржЖржкржирж┐ ржкрзНрж░рж╛ржЗржнрзЗржЯ ржбрж┐ржкрзНрж▓ржпрж╝ржорзЗржирзНржЯ ржнрж╛рж░рзНрж╕ржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржЫрзЗржи, [ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи](/#/auth) ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрзА ржкрзНрж░ржмрзЗрж╢ ржХрж░рж╛рждрзЗ ЁЯФС
       \ 3я╕ПтГг ржпржжрж┐ ржЖржкржирж┐ ржЖржкржирж╛рж░ ржирж┐ржЬрзЗрж░ OpenAI рж░рж┐рж╕рзЛрж░рзНрж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржи, [ржПржЦрж╛ржирзЗ ржХрзНрж▓рж┐ржХ ржХрж░рзБржи](/#/settings) рж╕рзЗржЯрж┐ржВрж╕ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рждрзЗ тЪЩя╕П
       `,
  },
  Auth: {
    Return: "ржлрж┐рж░рзЗ ржпрж╛ржи",
    Title: "ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржкрзНрж░ржпрж╝рзЛржЬржи",
    Tips: "ржЕрзНржпрж╛ржбржорж┐ржи ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржпрж╛ржЪрж╛ржЗ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзЗржЫрзЗржи, ржирж┐ржЪрзЗ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрзЛржб ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи",
    SubTips: "ржЕржержмрж╛ ржЖржкржирж╛рж░ OpenAI ржмрж╛ Google AI ржХрзА ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи",
    Input: "ржПржЦрж╛ржирзЗ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрзЛржб ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи",
    Confirm: "ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи",
    Later: "ржкрж░рзЗ ржмрж▓рзБржи",
    SaasTips: "ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЭрж╛ржорзЗрж▓рж╛, ржПржЦржиржЗ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рждрзЗ ржЪрж╛ржи",
    TopTips:
      "ЁЯе│ NextGPT AI ржкрзНрж░ржержо ржкрзНрж░ржХрж╛рж╢рзЗрж░ ржЕржлрж╛рж░, ржПржЦржиржЗ OpenAI o1, GPT-4o, Claude-3.5 рж╕рж╣ рж╕рж░рзНржмрж╢рзЗрж╖ ржмржбрж╝ ржоржбрзЗрж▓ржЧрзБрж▓рж┐ ржЖржирж▓ржХ ржХрж░рзБржи",
  },
  ChatItem: {
    ChatItemCount: (count: number) => `${count} ржЯрж┐ ржХржерзЛржкржХржержи`,
  },
  Chat: {
    SubTitle: (count: number) => `ржорзЛржЯ ${count} ржЯрж┐ ржХржерзЛржкржХржержи`,
    EditMessage: {
      Title: "ржмрж╛рж░рзНрждрж╛ рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
      Topic: {
        Title: "ржЪрзНржпрж╛ржЯрзЗрж░ ржмрж┐рж╖ржпрж╝",
        SubTitle: "ржмрж░рзНрждржорж╛ржи ржЪрзНржпрж╛ржЯрзЗрж░ ржмрж┐рж╖ржпрж╝ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
      },
    },
    Actions: {
      ChatList: "ржмрж╛рж░рзНрждрж╛рж░ рждрж╛рж▓рж┐ржХрж╛ ржжрзЗржЦрзБржи",
      CompressedHistory: "рж╕ржВржХрзБржЪрж┐ржд ржЗрждрж┐рж╣рж╛рж╕ ржкрзНрж░ржорзНржкржЯ ржжрзЗржЦрзБржи",
      Export: "ржЪрзНржпрж╛ржЯ рж░рзЗржХрж░рзНржб рж░ржкрзНрждрж╛ржирж┐ ржХрж░рзБржи",
      Copy: "ржХржкрж┐ ржХрж░рзБржи",
      Stop: "ржерж╛ржорж╛ржи",
      Retry: "ржкрзБржирж░рж╛ржпрж╝ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи",
      Pin: "ржкрж┐ржи ржХрж░рзБржи",
      PinToastContent: "1 ржЯрж┐ ржХржерзЛржкржХржержи ржкрзНрж░рж┐рж╕рзЗржЯ ржкрзНрж░ржорзНржкржЯрзЗ ржкрж┐ржи ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ",
      PinToastAction: "ржжрзЗржЦрзБржи",
      Delete: "ржорзБржЫрзЗ ржлрзЗрж▓рзБржи",
      Edit: "рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
      FullScreen: "ржкрзВрж░рзНржг ржкрж░рзНржжрж╛",
      RefreshTitle: "рж╢рж┐рж░рзЛржирж╛ржо рж░рж┐ржлрзНрж░рзЗрж╢ ржХрж░рзБржи",
      RefreshToast: "рж░рж┐ржлрзНрж░рзЗрж╢ рж╢рж┐рж░рзЛржирж╛ржо ржЕржирзБрж░рзЛржз ржкрж╛ржарж╛ржирзЛ рж╣ржпрж╝рзЗржЫрзЗ",
      Speech: "ржкржбрж╝рзБржи",
      StopSpeech: "ржерж╛ржорж╛ржи",
    },
    Commands: {
      new: "ржирждрзБржи ржЪрзНржпрж╛ржЯ",
      newm: "ржорж╛рж╕рзНржХ ржерзЗржХрзЗ ржирждрзБржи ржЪрзНржпрж╛ржЯ",
      next: "ржкрж░ржмрж░рзНрждрзА ржЪрзНржпрж╛ржЯ",
      prev: "ржкрзВрж░рзНржмржмрж░рзНрждрзА ржЪрзНржпрж╛ржЯ",
      clear: "ржкрзНрж░рж╕ржЩрзНржЧ ржорзБржЫрзБржи",
      fork: "ржЪрзНржпрж╛ржЯ ржХржкрж┐ ржХрж░рзБржи",
      del: "ржЪрзНржпрж╛ржЯ ржорзБржЫрзБржи",
    },
    InputActions: {
      Stop: "ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржерж╛ржорж╛ржи",
      ToBottom: "рж╕рж░рзНржмрж╢рзЗрж╖рзЗ ржпрж╛ржи",
      Theme: {
        auto: "рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ ржерж┐ржо",
        light: "рж╣рж╛рж▓ржХрж╛ ржорзЛржб",
        dark: "ржЧрж╛ржврж╝ ржорзЛржб",
      },
      Prompt: "ржжрзНрж░рзБржд ржирж┐рж░рзНржжрзЗрж╢",
      Masks: "рж╕ржм ржорж╛рж╕рзНржХ",
      Clear: "ржЪрзНржпрж╛ржЯ ржорзБржЫрзБржи",
      Settings: "ржЪрзНржпрж╛ржЯ рж╕рзЗржЯрж┐ржВрж╕",
      UploadImage: "ржЫржмрж┐ ржЖржкрж▓рзЛржб ржХрж░рзБржи",
    },
    Rename: "ржЪрзНржпрж╛ржЯрзЗрж░ ржирж╛ржо ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
    Typing: "ржЯрж╛ржЗржк ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...",
    Input: (submitKey: string) => {
      var inputHints = `${submitKey} ржкрж╛ржарж╛ржи`;
      if (submitKey === String(SubmitKey.Enter)) {
        inputHints += ", Shift + Enter ржирждрзБржи рж▓рж╛ржЗржи";
      }
      return inputHints + ", / ржкрзВрж░рзНржгрждрж╛ ржЯрзНрж░рж┐ржЧрж╛рж░ ржХрж░рзБржи, : ржХржорж╛ржирзНржб ржЯрзНрж░рж┐ржЧрж╛рж░ ржХрж░рзБржи";
    },
    Send: "ржкрж╛ржарж╛ржи",
    StartSpeak: "ржмрж▓рзБржи",
    StopSpeak: "ржерж╛ржорж╛ржи",
    Config: {
      Reset: "ржорзЗржорж░рж┐ ржорзБржЫрзБржи",
      SaveAs: "ржорж╛рж╕рзНржХ рж╣рж┐рж╕рж╛ржмрзЗ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рзБржи",
    },
    IsContext: "ржкрзНрж░рж┐рж╕рзЗржЯ ржкрзНрж░ржорзНржкржЯ",
    ShortcutKey: {
      Title: "ржХрзАржмрзЛрж░рзНржб рж╢рж░рзНржЯржХрж╛ржЯ",
      newChat: "ржирждрзБржи ржЪрзНржпрж╛ржЯ ржЦрзБрж▓рзБржи",
      focusInput: "ржЗржиржкрзБржЯ ржлрзЛржХрж╛рж╕ ржХрж░рзБржи",
      copyLastMessage: "рж╢рзЗрж╖ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ ржХржкрж┐ ржХрж░рзБржи",
      copyLastCode: "рж╢рзЗрж╖ ржХрзЛржб ржмрзНрж▓ржХ ржХржкрж┐ ржХрж░рзБржи",
      showShortcutKey: "рж╢рж░рзНржЯржХрж╛ржЯ ржжрзЗржЦрж╛ржи",
      clearContext: "ржкрзНрж░рж╕ржЩрзНржЧ ржорзБржЫрзБржи",
    },
  },
  Export: {
    Title: "ржЪрзНржпрж╛ржЯ рж░рзЗржХрж░рзНржб рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи",
    Copy: "рж╕ржм ржХржкрж┐ ржХрж░рзБржи",
    Download: "ржлрж╛ржЗрж▓ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи",
    Share: "ShareGPT рждрзЗ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи",
    MessageFromYou: "ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА",
    MessageFromChatGPT: "ChatGPT",
    Format: {
      Title: "рж░ржкрзНрждрж╛ржирж┐ ржлрж░ржорзНржпрж╛ржЯ",
      SubTitle: "Markdown ржЯрзЗржХрзНрж╕ржЯ ржмрж╛ PNG ржЫржмрж┐ рж╣рж┐рж╕рж╛ржмрзЗ рж░ржкрзНрждрж╛ржирж┐ ржХрж░рждрзЗ ржкрж╛рж░рзЗржи",
    },
    IncludeContext: {
      Title: "ржорж╛рж╕рзНржХ ржкрзНрж░рж╕ржЩрзНржЧ ржЕржирзНрждрж░рзНржнрзБржХрзНржд ржХрж░рзБржи",
      SubTitle: "ржмрж╛рж░рзНрждрж╛ржпрж╝ ржорж╛рж╕рзНржХ ржкрзНрж░рж╕ржЩрзНржЧ ржкрзНрж░ржжрж░рзНрж╢ржи ржХрж░ржмрзЗржи ржХрж┐ржирж╛",
    },
    Steps: {
      Select: "ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
      Preview: "ржкрзВрж░рзНржмрж░рзВржк",
    },
    Image: {
      Toast: "рж╕рзНржХрзНрж░рж┐ржирж╢ржЯ рждрзИрж░рж┐ рж╣ржЪрзНржЫрзЗ",
      Modal: "ржЫржмрж┐ рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рждрзЗ ржжрзАрж░рзНржШ ржЪрж╛ржкрзБржи ржмрж╛ ржбрж╛ржи ржХрзНрж▓рж┐ржХ ржХрж░рзБржи",
    },
    Artifacts: {
      Title: "рж╢рзЗржпрж╝рж╛рж░ ржкрзГрж╖рзНржарж╛",
      Error: "рж╢рзЗржпрж╝рж╛рж░ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ",
    },
  },
  Select: {
    Search: "ржмрж╛рж░рзНрждрж╛ ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи",
    All: "рж╕ржм ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
    Latest: "рж╕рж░рзНржмрж╢рзЗрж╖ ржХржпрж╝рзЗржХржЯрж┐",
    Clear: "ржирж┐рж░рзНржмрж╛ржЪржи ржорзБржЫрзБржи",
  },
  Memory: {
    Title: "ржЗрждрж┐рж╣рж╛рж╕ рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░",
    EmptyContent:
      "ржХржерзЛржкржХржержирзЗрж░ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржЦрзБржм рж╕ржВржХрзНрж╖рж┐ржкрзНржд, рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░ ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗ",
    Send: "ржЪрзНржпрж╛ржЯ рж░рзЗржХрж░рзНржб рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж╕ржВржХрзБржЪрж┐ржд ржХрж░рзБржи ржПржмржВ ржкрзНрж░рж╕ржЩрзНржЧ рж╣рж┐рж╕рж╛ржмрзЗ ржкрж╛ржарж╛ржи",
    Copy: "рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░ ржХржкрж┐ ржХрж░рзБржи",
    Reset: "[ржЕржмрзНржпржмрж╣рзГржд]",
    ResetConfirm: "ржЗрждрж┐рж╣рж╛рж╕ рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░ ржорзБржЫрждрзЗ ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи?",
  },
  Home: {
    NewChat: "ржирждрзБржи ржЪрзНржпрж╛ржЯ",
    DeleteChat: "ржирж┐рж░рзНржмрж╛ржЪрж┐ржд ржХржерзЛржкржХржержи ржорзБржЫрждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
    DeleteToast: "ржХржерзЛржкржХржержи ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╣ржпрж╝рзЗржЫрзЗ",
    Revert: "ржкрзНрж░рждрзНржпрж╛рж╣рж╛рж░",
  },
  Settings: {
    Title: "рж╕рзЗржЯрж┐ржВрж╕",
    SubTitle: "рж╕ржм рж╕рзЗржЯрж┐ржВрж╕ ржЕржкрж╢ржи",
    ShowPassword: "ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржжрзЗржЦрж╛ржи",

    Danger: {
      Reset: {
        Title: "рж╕ржм рж╕рзЗржЯрж┐ржВрж╕ рж░рж┐рж╕рзЗржЯ ржХрж░рзБржи",
        SubTitle: "рж╕ржм рж╕рзЗржЯрж┐ржВрж╕ ржбрж┐ржлрж▓рзНржЯ ржорж╛ржирзЗ рж░рж┐рж╕рзЗржЯ ржХрж░рзБржи",
        Action: "ржПржЦржиржЗ рж░рж┐рж╕рзЗржЯ ржХрж░рзБржи",
        Confirm: "рж╕ржм рж╕рзЗржЯрж┐ржВрж╕ рж░рж┐рж╕рзЗржЯ ржХрж░рждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
      },
      Clear: {
        Title: "рж╕ржм ржбрзЗржЯрж╛ ржорзБржЫрзБржи",
        SubTitle: "рж╕ржм ржЪрзНржпрж╛ржЯ, рж╕рзЗржЯрж┐ржВрж╕ ржбрзЗржЯрж╛ ржорзБржЫрзБржи",
        Action: "ржПржЦржиржЗ ржорзБржЫрзБржи",
        Confirm: "рж╕ржм ржЪрзНржпрж╛ржЯ, рж╕рзЗржЯрж┐ржВрж╕ ржбрзЗржЯрж╛ ржорзБржЫрждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
      },
    },
    Lang: {
      Name: "Language", // ржжржпрж╝рж╛ ржХрж░рзЗ рж▓ржХрзНрж╖рзНржп ржХрж░рзБржи: ржпржжрж┐ ржирждрзБржи ржЕржирзБржмрж╛ржж ржпрзЛржЧ ржХрж░рждрзЗ ржЪрж╛ржи, ржПржЗ ржорж╛ржиржЯрж┐ ржЕржирзБржмрж╛ржж ржХрж░ржмрзЗржи ржирж╛, ржПржЯрж┐ `Language` рж╣рж┐рж╕рж╛ржмрзЗ рж░рж╛ржЦрзБржи
      All: "рж╕ржм ржнрж╛рж╖рж╛",
    },
    Avatar: "ржЕржмрждрж╛рж░",
    FontSize: {
      Title: "ржлржирзНржЯ рж╕рж╛ржЗржЬ",
      SubTitle: "ржЪрзНржпрж╛ржЯ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБрж░ ржлржирзНржЯ рж╕рж╛ржЗржЬ",
    },
    FontFamily: {
      Title: "ржЪрзНржпрж╛ржЯ ржлржирзНржЯ",
      SubTitle:
        "ржЪрзНржпрж╛ржЯ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБрж░ ржлржирзНржЯ, ржпржжрж┐ ржЦрж╛рж▓рж┐ ржерж╛ржХрзЗ рждржмрзЗ ржЧрзНрж▓рзЛржмрж╛рж▓ ржбрж┐ржлрж▓рзНржЯ ржлржирзНржЯ ржкрзНрж░ржпрж╝рзЛржЧ рж╣ржмрзЗ",
      Placeholder: "ржлржирзНржЯрзЗрж░ ржирж╛ржо",
    },
    InjectSystemPrompts: {
      Title: "рж╕рж┐рж╕рзНржЯрзЗржо ржкрзНрж░ржорзНржкржЯ ржЗржиржЬрзЗржХрзНржЯ ржХрж░рзБржи",
      SubTitle:
        "ржкрзНрж░рждрж┐ржЯрж┐ ржЕржирзБрж░рзЛржзрзЗрж░ ржмрж╛рж░рзНрждрж╛ рждрж╛рж▓рж┐ржХрж╛рж░ рж╢рзБрж░рзБрждрзЗ ChatGPT ржПрж░ рж╕рж┐рж╕рзНржЯрзЗржо ржкрзНрж░ржорзНржкржЯ ржпрзЛржЧ ржХрж░рзБржи",
    },
    InputTemplate: {
      Title: "ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА ржЗржиржкрзБржЯ ржкрзНрж░рж┐ржкрзНрж░рж╕рзЗрж╕рж┐ржВ",
      SubTitle: "ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ рж╕рж░рзНржмрж╢рзЗрж╖ ржмрж╛рж░рзНрждрж╛ ржПржЗ ржЯрзЗржоржкрзНрж▓рзЗржЯрзЗ ржкрзВрж░ржг рж╣ржмрзЗ",
    },

    Update: {
      Version: (x: string) => `ржмрж░рзНрждржорж╛ржи рж╕ржВрж╕рзНржХрж░ржг: ${x}`,
      IsLatest: "ржПржЯрж┐ рж╕рж░рзНржмрж╢рзЗрж╖ рж╕ржВрж╕рзНржХрж░ржг",
      CheckUpdate: "ржЖржкржбрзЗржЯ ржЪрзЗржХ ржХрж░рзБржи",
      IsChecking: "ржЖржкржбрзЗржЯ ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...",
      FoundUpdate: (x: string) => `ржирждрзБржи рж╕ржВрж╕рзНржХрж░ржг ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ: ${x}`,
      GoToUpdate: "ржЖржкржбрзЗржЯ ржХрж░рждрзЗ ржпрж╛ржи",
      Success: "ржЖржкржбрзЗржЯ рж╕ржлрж▓ рж╣ржпрж╝рзЗржЫрзЗ!",
      Failed: "ржЖржкржбрзЗржЯ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ",
    },
    SendKey: "ржкрж╛ржарж╛ржирзЛрж░ ржХрзА",
    Theme: "ржерж┐ржо",
    TightBorder: "ржмрж░рзНржбрж╛рж░рж▓рзЗрж╕ ржорзЛржб",
    SendPreviewBubble: {
      Title: "ржкрзНрж░рж┐ржнрж┐ржЙ ржмрж╛ржмрж▓",
      SubTitle: "ржкрзНрж░рж┐ржнрж┐ржЙ ржмрж╛ржмрж▓рзЗ Markdown ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржкрзНрж░рж┐ржнрж┐ржЙ ржХрж░рзБржи",
    },
    AutoGenerateTitle: {
      Title: "рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж╢рж┐рж░рзЛржирж╛ржо рждрзИрж░рж┐ ржХрж░рзБржи",
      SubTitle: "ржХржерзЛржкржХржержирзЗрж░ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржЕржирзБржпрж╛ржпрж╝рзА ржЙржкржпрзБржХрзНржд рж╢рж┐рж░рзЛржирж╛ржо рждрзИрж░рж┐ ржХрж░рзБржи",
    },
    Sync: {
      CloudState: "ржХрзНрж▓рж╛ржЙржб ржбрзЗржЯрж╛",
      NotSyncYet: "ржПржЦржиржУ рж╕рж┐ржЩрзНржХ ржХрж░рж╛ рж╣ржпрж╝ржирж┐",
      Success: "рж╕рж┐ржЩрзНржХ рж╕ржлрж▓ рж╣ржпрж╝рзЗржЫрзЗ",
      Fail: "рж╕рж┐ржЩрзНржХ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ",

      Config: {
        Modal: {
          Title: "ржХрзНрж▓рж╛ржЙржб рж╕рж┐ржЩрзНржХ ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рзБржи",
          Check: "ржЙржкрж▓ржмрзНржзрждрж╛ ржЪрзЗржХ ржХрж░рзБржи",
        },
        SyncType: {
          Title: "рж╕рж┐ржЩрзНржХ ржЯрж╛ржЗржк",
          SubTitle: "ржкрзНрж░рж┐ржпрж╝ рж╕рж┐ржЩрзНржХ рж╕рж╛рж░рзНржнрж╛рж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
        },
        Proxy: {
          Title: "ржкрзНрж░ржХрзНрж╕рж┐ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
          SubTitle:
            "ржмрзНрж░рж╛ржЙржЬрж╛рж░рзЗ рж╕рж┐ржЩрзНржХ ржХрж░рж╛рж░ рж╕ржоржпрж╝, ржХрзНрж░рж╕-ржЕрж░рж┐ржЬрж┐ржи рж╕рзАржорж╛ржмржжрзНржзрждрж╛ ржПржбрж╝рж╛рждрзЗ ржкрзНрж░ржХрзНрж╕рж┐ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рждрзЗ рж╣ржмрзЗ",
        },
        ProxyUrl: {
          Title: "ржкрзНрж░ржХрзНрж╕рж┐ ржарж┐ржХрж╛ржирж╛",
          SubTitle:
            "рж╢рзБржзрзБржорж╛рждрзНрж░ ржПржЗ ржкрзНрж░ржХрж▓рзНржкрзЗрж░ ржЕржирзНрждрж░рзНржирж┐рж░рзНржорж┐ржд ржХрзНрж░рж╕-ржЕрж░рж┐ржЬрж┐ржи ржкрзНрж░ржХрзНрж╕рж┐рж░ ржЬржирзНржп ржкрзНрж░ржпрзЛржЬрзНржп",
        },

        WebDav: {
          Endpoint: "WebDAV ржарж┐ржХрж╛ржирж╛",
          UserName: "ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржирж╛ржо",
          Password: "ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб",
        },

        UpStash: {
          Endpoint: "UpStash Redis REST Url",
          UserName: "ржмрзНржпрж╛ржХржЖржк ржирж╛ржо",
          Password: "UpStash Redis REST Token",
        },
      },

      LocalState: "рж╕рзНржерж╛ржирзАржпрж╝ ржбрзЗржЯрж╛",
      Overview: (overview: any) => {
        return `${overview.chat} ржЯрж┐ ржХржерзЛржкржХржержи, ${overview.message} ржЯрж┐ ржмрж╛рж░рзНрждрж╛, ${overview.prompt} ржЯрж┐ ржкрзНрж░ржорзНржкржЯ, ${overview.mask} ржЯрж┐ ржорж╛рж╕рзНржХ`;
      },
      ImportFailed: "ржЖржоржжрж╛ржирж┐ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ",
    },
    Mask: {
      Splash: {
        Title: "ржорж╛рж╕рзНржХ рж╕рзНржЯрж╛рж░рзНржЯ ржкрзГрж╖рзНржарж╛",
        SubTitle:
          "ржирждрзБржи ржЪрзНржпрж╛ржЯ рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржоржпрж╝, ржорж╛рж╕рзНржХ рж╕рзНржЯрж╛рж░рзНржЯ ржкрзГрж╖рзНржарж╛ ржкрзНрж░ржжрж░рзНрж╢ржи ржХрж░рзБржи",
      },
      Builtin: {
        Title: "ржЕржирзНрждрж░рзНржирж┐рж░рзНржорж┐ржд ржорж╛рж╕рзНржХ рж▓рзБржХрж╛ржи",
        SubTitle: "рж╕ржм ржорж╛рж╕рзНржХ рждрж╛рж▓рж┐ржХрж╛ржпрж╝ ржЕржирзНрждрж░рзНржирж┐рж░рзНржорж┐ржд ржорж╛рж╕рзНржХ рж▓рзБржХрж╛ржи",
      },
    },
    Prompt: {
      Disable: {
        Title: "ржкрзНрж░ржорзНржкржЯ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ ржкрзВрж░рзНржгрждрж╛ ржирж┐рж╖рзНржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
        SubTitle:
          "ржЗржиржкрзБржЯ ржмржХрзНрж╕рзЗрж░ рж╢рзБрж░рзБрждрзЗ / ржкрзНрж░ржмрзЗрж╢ ржХрж░рж╛рж▓рзЗ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ ржкрзВрж░рзНржгрждрж╛ ржЯрзНрж░рж┐ржЧрж╛рж░ рж╣ржмрзЗ",
      },
      List: "ржХрж╛рж╕рзНржЯржо ржкрзНрж░ржорзНржкржЯ рждрж╛рж▓рж┐ржХрж╛",
      ListCount: (builtin: number, custom: number) =>
        `ржЕржирзНрждрж░рзНржирж┐рж░рзНржорж┐ржд ${builtin} ржЯрж┐, ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзА рж╕ржВржЬрзНржЮрж╛ржпрж╝рж┐ржд ${custom} ржЯрж┐`,
      Edit: "рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
      Modal: {
        Title: "ржкрзНрж░ржорзНржкржЯ рждрж╛рж▓рж┐ржХрж╛",
        Add: "ржирждрзБржи рждрзИрж░рж┐ ржХрж░рзБржи",
        Search: "ржкрзНрж░ржорзНржкржЯ ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи",
      },
      EditModal: {
        Title: "ржкрзНрж░ржорзНржкржЯ рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
      },
    },
    HistoryCount: {
      Title: "ржЗрждрж┐рж╣рж╛рж╕ ржмрж╛рж░рзНрждрж╛рж░ рж╕ржВржЦрзНржпрж╛",
      SubTitle: "ржкрзНрж░рждрж┐ржЯрж┐ ржЕржирзБрж░рзЛржзрзЗрж░ рж╕рж╛ржерзЗ ржЗрждрж┐рж╣рж╛рж╕ ржмрж╛рж░рзНрждрж╛рж░ рж╕ржВржЦрзНржпрж╛",
    },
    CompressThreshold: {
      Title: "ржЗрждрж┐рж╣рж╛рж╕ ржмрж╛рж░рзНрждрж╛рж░ ржжрзИрж░рзНржШрзНржп рж╕ржВржХрзЛржЪржирзЗрж░ рж╕рзАржорж╛",
      SubTitle:
        "рж╕ржВржХрзБржЪрж┐ржд ржирж╛ рж╣ржУржпрж╝рж╛ ржЗрждрж┐рж╣рж╛рж╕ ржмрж╛рж░рзНрждрж╛ ржПржЗ ржорж╛ржи ржЕрждрж┐ржХрзНрж░ржо ржХрж░рж▓рзЗ, рж╕ржВржХрзЛржЪржи ржХрж░рж╛ рж╣ржмрзЗ",
    },

    Usage: {
      Title: "ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржЪрзЗржХ",
      SubTitle(used: any, total: any) {
        return `ржПржЗ ржорж╛рж╕рзЗ $${used} ржмрзНржпржмрж╣рж╛рж░ рж╣ржпрж╝рзЗржЫрзЗ, ржорзЛржЯ рж╕рж╛ржмрж╕рзНржХрзНрж░рж┐ржкрж╢ржи $${total}`;
      },
      IsChecking: "ржЪрзЗржХ ржХрж░рж╛ рж╣ржЪрзНржЫрзЗ...",
      Check: "ржкрзБржирж░рж╛ржпрж╝ ржЪрзЗржХ ржХрж░рзБржи",
      NoAccess: "API Key ржмрж╛ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржкрзНрж░ржмрзЗрж╢ ржХрж░рзЗ ржмрзНржпрж╛рж▓рзЗржирзНрж╕ ржжрзЗржЦрзБржи",
    },

    Access: {
      SaasStart: {
        Title: "NextGPT AI ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
        Label: "я╝Ирж╕ржмржЪрзЗржпрж╝рзЗ рж╕рж╛рж╢рзНрж░ржпрж╝рзА рж╕ржорж╛ржзрж╛ржия╝Й",
        SubTitle:
          "NextGPT ржЕржлрж┐рж╕рж┐ржпрж╝рж╛рж▓ ржжрзНржмрж╛рж░рж╛ рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖рж┐ржд, ржХрзЛржирзЛ ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржи ржЫрж╛ржбрж╝рж╛ржЗ ржмрзНржпржмрж╣рж╛рж░ржпрзЛржЧрзНржп, OpenAI o1, GPT-4o, Claude-3.5 рж╕рж╣ рж╕рж░рзНржмрж╢рзЗрж╖ ржмржбрж╝ ржоржбрзЗрж▓ржЧрзБрж▓рж┐ рж╕ржорж░рзНржержи ржХрж░рзЗ",
        ChatNow: "ржПржЦржиржЗ ржХржерзЛржкржХржержи ржХрж░рзБржи",
      },
      AccessCode: {
        Title: "ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб",
        SubTitle: "ржЕрзНржпрж╛ржбржорж┐ржи ржПржиржХрзНрж░рж┐ржкрзНржЯрзЗржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзЗржЫрзЗржи",
        Placeholder: "ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи",
      },
      CustomEndpoint: {
        Title: "ржХрж╛рж╕рзНржЯржо ржПржирзНржбржкржпрж╝рзЗржирзНржЯ",
        SubTitle: "ржХрж╛рж╕рзНржЯржо Azure ржмрж╛ OpenAI рж╕рж╛рж░рзНржнрж┐рж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи ржХрж┐ржирж╛",
      },
      Provider: {
        Title: "ржоржбрзЗрж▓ рж╕рж╛рж░рзНржнрж┐рж╕ ржкрзНрж░ржжрж╛ржиржХрж╛рж░рзА",
        SubTitle: "ржмрж┐ржнрж┐ржирзНржи ржкрзНрж░ржжрж╛ржиржХрж╛рж░рзА ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
      },
      OpenAI: {
        ApiKey: {
          Title: "API Key",
          SubTitle:
            "ржХрж╛рж╕рзНржЯржо OpenAI Key ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ рж╕рзАржорж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржпрж╛ржи",
          Placeholder: "OpenAI API Key",
        },

        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle:
            "ржбрж┐ржлрж▓рзНржЯ ржарж┐ржХрж╛ржирж╛ ржЫрж╛ржбрж╝рж╛, ржЕржмрж╢рзНржпржЗ http(s):// ржЕржирзНрждрж░рзНржнрзБржХрзНржд ржХрж░рждрзЗ рж╣ржмрзЗ",
        },
      },
      Azure: {
        ApiKey: {
          Title: "API Key",
          SubTitle:
            "ржХрж╛рж╕рзНржЯржо Azure Key ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ рж╕рзАржорж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржпрж╛ржи",
          Placeholder: "Azure API Key",
        },

        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },

        ApiVerion: {
          Title: "API рж╕ржВрж╕рзНржХрж░ржг (azure api version)",
          SubTitle: "ржирж┐рж░рзНржжрж┐рж╖рзНржЯ ржХрж┐ржЫрзБ рж╕ржВрж╕рзНржХрж░ржг ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
        },
      },
      Anthropic: {
        ApiKey: {
          Title: "API Key",
          SubTitle:
            "ржХрж╛рж╕рзНржЯржо Anthropic Key ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ ржкрж╛рж╕ржУржпрж╝рж╛рж░рзНржб ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ рж╕рзАржорж╛ ржПржбрж╝рж┐ржпрж╝рзЗ ржпрж╛ржи",
          Placeholder: "Anthropic API Key",
        },

        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },

        ApiVerion: {
          Title: "API рж╕ржВрж╕рзНржХрж░ржг (claude api version)",
          SubTitle: "ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ API рж╕ржВрж╕рзНржХрж░ржг ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи",
        },
      },
      Google: {
        ApiKey: {
          Title: "API Key",
          SubTitle: "Google AI ржерзЗржХрзЗ ржЖржкржирж╛рж░ API Key ржкрж╛ржи",
          Placeholder: "Google AI API KEY",
        },

        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },

        ApiVersion: {
          Title: "API рж╕ржВрж╕рзНржХрж░ржг (рж╢рзБржзрзБржорж╛рждрзНрж░ gemini-pro ржПрж░ ржЬржирзНржп)",
          SubTitle: "ржПржХржЯрж┐ ржирж┐рж░рзНржжрж┐рж╖рзНржЯ API рж╕ржВрж╕рзНржХрж░ржг ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
        },
        GoogleSafetySettings: {
          Title: "Google ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржлрж┐рж▓рзНржЯрж╛рж░рж┐ржВ рж╕рзНрждрж░",
          SubTitle: "ржЧрзБржЧрж▓ ржирж┐рж░рж╛ржкрждрзНрждрж╛ ржлрж┐рж▓рзНржЯрж╛рж░рж┐ржВ рж╕рзНрждрж░ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
        },
      },
      Baidu: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Baidu API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Baidu API ржХрзА",
        },
        SecretKey: {
          Title: "рж╕рж┐ржХрзНрж░рзЗржЯ ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Baidu рж╕рж┐ржХрзНрж░рзЗржЯ ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Baidu рж╕рж┐ржХрзНрж░рзЗржЯ ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: ".env ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржирзЗ ржХрж╛рж╕рзНржЯржо рж╕ржорж░рзНржержи ржирзЗржЗ",
        },
      },
      Tencent: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Tencent ржХрзНрж▓рж╛ржЙржб API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Tencent API ржХрзА",
        },
        SecretKey: {
          Title: "рж╕рж┐ржХрзНрж░рзЗржЯ ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Tencent ржХрзНрж▓рж╛ржЙржб рж╕рж┐ржХрзНрж░рзЗржЯ ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Tencent рж╕рж┐ржХрзНрж░рзЗржЯ ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: ".env ржХржиржлрж┐ржЧрж╛рж░рзЗрж╢ржирзЗ ржХрж╛рж╕рзНржЯржо рж╕ржорж░рзНржержи ржирзЗржЗ",
        },
      },
      ByteDance: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо ByteDance API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "ByteDance API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      Alibaba: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Alibaba ржХрзНрж▓рж╛ржЙржб API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Alibaba ржХрзНрж▓рж╛ржЙржб API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      Moonshot: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Moonshot API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Moonshot API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      DeepSeek: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо DeepSeek API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "DeepSeek API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      XAI: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо XAI API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "XAI API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      ChatGLM: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо ChatGLM API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "ChatGLM API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      Stability: {
        ApiKey: {
          Title: "API ржХрзА",
          SubTitle: "ржХрж╛рж╕рзНржЯржо Stability API ржХрзА ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
          Placeholder: "Stability API ржХрзА",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      Iflytek: {
        ApiKey: {
          Title: "ApiKey",
          SubTitle: "шопщгЮцШЯчБл ржХржирж╕рзЛрж▓ ржерзЗржХрзЗ ржкрзНрж░рж╛ржкрзНржд APIKey",
          Placeholder: "APIKey",
        },
        ApiSecret: {
          Title: "ApiSecret",
          SubTitle: "шопщгЮцШЯчБл ржХржирж╕рзЛрж▓ ржерзЗржХрзЗ ржкрзНрж░рж╛ржкрзНржд APISecret",
          Placeholder: "APISecret",
        },
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржЙржжрж╛рж╣рж░ржг:",
        },
      },
      CustomModel: {
        Title: "ржХрж╛рж╕рзНржЯржо ржоржбрзЗрж▓ ржирж╛ржо",
        SubTitle: "ржХрж╛рж╕рзНржЯржо ржоржбрзЗрж▓ ржЕржкрж╢ржи ржпрзЛржЧ ржХрж░рзБржи, ржЗржВрж░рзЗржЬрж┐ ржХржорж╛ ржжрж┐ржпрж╝рзЗ ржЖрж▓рж╛ржжрж╛ ржХрж░рзБржи",
      },
    },

    Model: "ржоржбрзЗрж▓ (model)",
    CompressModel: {
      Title: "ржХржерзЛржкржХржержи рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░ ржоржбрзЗрж▓",
      SubTitle:
        "ржЗрждрж┐рж╣рж╛рж╕ рж░рзЗржХрж░рзНржб рж╕ржВржХрзБржЪрж┐ржд ржХрж░рждрзЗ ржПржмржВ ржХржерзЛржкржХржержирзЗрж░ рж╢рж┐рж░рзЛржирж╛ржо рждрзИрж░рж┐ ржХрж░рждрзЗ ржмрзНржпржмрж╣рзГржд ржоржбрзЗрж▓",
    },
    Temperature: {
      Title: "рж░рзНржпрж╛ржирзНржбржоржирзЗрж╕ (temperature)",
      SubTitle: "ржорж╛ржи ржпржд ржмржбрж╝ рж╣ржмрзЗ, ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ рждржд рж░рзНржпрж╛ржирзНржбржо рж╣ржмрзЗ",
    },
    TopP: {
      Title: "ржирж┐ржЙржХрзНрж▓рж┐ржпрж╝рж╛рж░ рж╕рзНржпрж╛ржорзНржкрж▓рж┐ржВ (top_p)",
      SubTitle:
        "рж░рзНржпрж╛ржирзНржбржоржирзЗрж╕рзЗрж░ ржорждрзЛ, рждржмрзЗ рж░рзНржпрж╛ржирзНржбржоржирзЗрж╕рзЗрж░ рж╕рж╛ржерзЗ ржПржХрж╕рж╛ржерзЗ ржкрж░рж┐ржмрж░рзНрждржи ржХрж░ржмрзЗржи ржирж╛",
    },
    MaxTokens: {
      Title: "ржПржХржХ ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ рж╕рзАржорж╛ (max_tokens)",
      SubTitle: "ржПржХржХ ржЗржирзНржЯрж╛рж░ржЕрзНржпрж╛ржХрж╢ржирзЗ ржмрзНржпржмрж╣рзГржд рж╕рж░рзНржмрж╛ржзрж┐ржХ ржЯрзЛржХрзЗржи рж╕ржВржЦрзНржпрж╛",
    },
    PresencePenalty: {
      Title: "ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржирждрзБржирждрзНржм (presence_penalty)",
      SubTitle:
        "ржорж╛ржи ржпржд ржмржбрж╝ рж╣ржмрзЗ, ржирждрзБржи ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБрждрзЗ ржкрзНрж░рж╕рж╛рж░рж┐ржд рж╣ржУржпрж╝рж╛рж░ рж╕ржорзНржнрж╛ржмржирж╛ рждржд ржмрзЗрж╢рж┐",
    },
    FrequencyPenalty: {
      Title: "ржлрзНрж░рж┐ржХрзЛржпрж╝рзЗржирзНрж╕рж┐ ржкрзЗржирж╛рж▓рзНржЯрж┐ (frequency_penalty)",
      SubTitle: "ржорж╛ржи ржпржд ржмржбрж╝ рж╣ржмрзЗ, ржкрзБржирж░рж╛ржмрзГрждрзНржд рж╢ржмрзНржж ржХржорж╛ржирзЛрж░ рж╕ржорзНржнрж╛ржмржирж╛ рждржд ржмрзЗрж╢рж┐",
    },
    TTS: {
      Enable: {
        Title: "ржЯрзЗржХрзНрж╕ржЯ ржЯрзБ рж╕рзНржкрж┐ржЪ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
        SubTitle: "ржЯрзЗржХрзНрж╕ржЯ ржерзЗржХрзЗ рж╕рзНржкрж┐ржЪ рж╕рж╛рж░рзНржнрж┐рж╕ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
      },
      Autoplay: {
        Title: "рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржкржбрж╝рж╛ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
        SubTitle:
          "рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ рж╕рзНржкрж┐ржЪ рждрзИрж░рж┐ ржХрж░рзБржи ржПржмржВ ржкрзНрж▓рзЗ ржХрж░рзБржи, ржкрзНрж░ржержорзЗ ржЯрзЗржХрзНрж╕ржЯ ржЯрзБ рж╕рзНржкрж┐ржЪ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рждрзЗ рж╣ржмрзЗ",
      },
      Model: "ржоржбрзЗрж▓",
      Engine: "рж░рзВржкрж╛ржирзНрждрж░ ржЗржЮрзНржЬрж┐ржи",
      Voice: {
        Title: "ржХржгрзНржарж╕рзНржмрж░",
        SubTitle: "рж╕рзНржкрж┐ржЪ рждрзИрж░рж┐ ржХрж░рж╛рж░ рж╕ржоржпрж╝ ржмрзНржпржмрж╣рзГржд ржХржгрзНржарж╕рзНржмрж░",
      },
      Speed: {
        Title: "ржЧрждрж┐",
        SubTitle: "рж╕рзНржкрж┐ржЪ рждрзИрж░рж┐рж░ ржЧрждрж┐",
      },
    },
    Realtime: {
      Enable: {
        Title: "рж░рж┐ржпрж╝рзЗрж▓ржЯрж╛ржЗржо ржЪрзНржпрж╛ржЯ",
        SubTitle: "рж░рж┐ржпрж╝рзЗрж▓ржЯрж╛ржЗржо ржЪрзНржпрж╛ржЯ ржлрж┐ржЪрж╛рж░ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
      },
      Provider: {
        Title: "ржоржбрзЗрж▓ ржкрзНрж░ржжрж╛ржиржХрж╛рж░рзА",
        SubTitle: "ржмрж┐ржнрж┐ржирзНржи ржкрзНрж░ржжрж╛ржиржХрж╛рж░рзА ржкрж░рж┐ржмрж░рзНрждржи ржХрж░рзБржи",
      },
      Model: {
        Title: "ржоржбрзЗрж▓",
        SubTitle: "ржПржХржЯрж┐ ржоржбрзЗрж▓ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
      },
      ApiKey: {
        Title: "API ржХрзА",
        SubTitle: "API ржХрзА",
        Placeholder: "API ржХрзА",
      },
      Azure: {
        Endpoint: {
          Title: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
          SubTitle: "ржПржирзНржбржкржпрж╝рзЗржирзНржЯ ржарж┐ржХрж╛ржирж╛",
        },
        Deployment: {
          Title: "ржбрж┐ржкрзНрж▓ржпрж╝ржорзЗржирзНржЯ ржирж╛ржо",
          SubTitle: "ржбрж┐ржкрзНрж▓ржпрж╝ржорзЗржирзНржЯ ржирж╛ржо",
        },
      },
      Temperature: {
        Title: "рж░рзНржпрж╛ржирзНржбржоржирзЗрж╕ (temperature)",
        SubTitle: "ржорж╛ржи ржпржд ржмржбрж╝ рж╣ржмрзЗ, ржкрзНрж░рждрж┐ржХрзНрж░рж┐ржпрж╝рж╛ рждржд рж░рзНржпрж╛ржирзНржбржо рж╣ржмрзЗ",
      },
    },
  },
  Store: {
    DefaultTopic: "ржирждрзБржи ржЪрзНржпрж╛ржЯ",
    BotHello: "ржЖржкржирж╛ржХрзЗ ржХрж┐ржнрж╛ржмрзЗ рж╕рж╛рж╣рж╛ржпрзНржп ржХрж░рждрзЗ ржкрж╛рж░рж┐?",
    Error: "ржПржХржЯрж┐ рждрзНрж░рзБржЯрж┐ ржШржЯрзЗржЫрзЗ, ржкрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи",
    Prompt: {
      History: (content: string) =>
        "ржПржЯрж┐ ржкрзВрж░рзНржмржмрж░рзНрждрзА ржХржерзЛржкржХржержирзЗрж░ рж╕ржВржХрзНрж╖рж┐ржкрзНрждрж╕рж╛рж░: " + content,
      Topic:
        "ржЪрж╛рж░ ржерзЗржХрзЗ ржкрж╛ржБржЪржЯрж┐ рж╢ржмрзНржж ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзЗ рж╕рж░рж╛рж╕рж░рж┐ ржПржЗ ржмрж╛ржХрзНржпрзЗрж░ рж╕ржВржХрзНрж╖рж┐ржкрзНржд ржмрж┐рж╖ржпрж╝ржЯрж┐ ржлрзЗрж░ржд ржжрж┐ржи, ржмрзНржпрж╛ржЦрзНржпрж╛ ржХрж░ржмрзЗржи ржирж╛, ржмрж┐рж░рж╛ржоржЪрж┐рж╣рзНржи ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи ржирж╛, ржЖржмрзЗржЧ ржкрзНрж░ржХрж╛рж╢ ржХрж░ржмрзЗржи ржирж╛, ржЕрждрж┐рж░рж┐ржХрзНржд ржкрж╛ржарзНржп ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗржи ржирж╛, ржмрзЛрж▓рзНржб ржХрж░ржмрзЗржи ржирж╛, ржпржжрж┐ ржХрзЛржиржУ ржмрж┐рж╖ржпрж╝ ржирж╛ ржерж╛ржХрзЗ, рж╕рж░рж╛рж╕рж░рж┐ 'ржЖржбрзНржбрж╛' ржлрзЗрж░ржд ржжрж┐ржи",
      Summarize:
        "ржХржерзЛржкржХржержирзЗрж░ ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ рж╕ржВржХрзНрж╖рзЗржкрзЗ рж╕ржВржХрзНрж╖рзЗржк ржХрж░рзБржи, ржкрж░ржмрж░рзНрждрзА ржкрзНрж░рж╕ржЩрзНржЧ ржкрзНрж░ржорзНржкржЯ рж╣рж┐рж╕рж╛ржмрзЗ ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржЬржирзНржп, рзирзжрзж рж╢ржмрзНржжрзЗрж░ ржоржзрзНржпрзЗ рж╕рзАржорж╛ржмржжрзНржз",
    },
  },
  Copy: {
    Success: "ржХрзНрж▓рж┐ржкржмрзЛрж░рзНржбрзЗ ржХржкрж┐ ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗ",
    Failed: "ржХржкрж┐ ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗ, ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржХрзНрж▓рж┐ржкржмрзЛрж░рзНржб ржЕржирзБржорждрж┐ ржжрж┐ржи",
  },
  Download: {
    Success: "ржмрж┐рж╖ржпрж╝ржмрж╕рзНрждрзБ ржЖржкржирж╛рж░ ржбрж┐рж░рзЗржХрзНржЯрж░рж┐рждрзЗ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рж╛ рж╣ржпрж╝рзЗржЫрзЗред",
    Failed: "ржбрж╛ржЙржирж▓рзЛржб ржмрзНржпрж░рзНрже рж╣ржпрж╝рзЗржЫрзЗред",
  },
  Context: {
    Toast: (x: any) => `${x} ржЯрж┐ ржкрзНрж░рж┐рж╕рзЗржЯ ржкрзНрж░ржорзНржкржЯ ржЕржирзНрждрж░рзНржнрзБржХрзНржд`,
    Edit: "ржмрж░рзНрждржорж╛ржи ржХржерзЛржкржХржержирзЗрж░ рж╕рзЗржЯрж┐ржВрж╕",
    Add: "ржПржХржЯрж┐ ржирждрзБржи ржХржерзЛржкржХржержи ржпрзЛржЧ ржХрж░рзБржи",
    Clear: "ржкрзНрж░рж╕ржЩрзНржЧ ржорзБржЫрзЗ ржлрзЗрж▓рж╛ рж╣ржпрж╝рзЗржЫрзЗ",
    Revert: "ржкрзНрж░рж╕ржЩрзНржЧ ржкрзБржирж░рзБржжрзНржзрж╛рж░ ржХрж░рзБржи",
  },
  Discovery: {
    Name: "ржЖржмрж┐рж╖рзНржХрж╛рж░",
  },
  FineTuned: {
    Sysmessage: "ржЖржкржирж┐ ржПржХржЬржи рж╕рж╣ржХрж╛рж░рзА",
  },
  SearchChat: {
    Name: "ржХржерзЛржкржХржержи ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи",
    Page: {
      Title: "ржХржерзЛржкржХржержи ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи",
      Search: "ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрзАржУржпрж╝рж╛рж░рзНржб ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи",
      NoResult: "ржХрзЛржи ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐",
      NoData: "ржХрзЛржи рждржерзНржп ржирзЗржЗ",
      Loading: "рж▓рзЛржб рж╣ржЪрзНржЫрзЗ",

      SubTitle: (count: number) => `${count} ржЯрж┐ ржлрж▓рж╛ржлрж▓ ржкрж╛ржУржпрж╝рж╛ ржЧрзЗржЫрзЗ`,
    },
    Item: {
      View: "ржжрзЗржЦрзБржи",
    },
  },
  Plugin: {
    Name: "ржкрзНрж▓рж╛ржЧржЗржи",
    Page: {
      Title: "ржкрзНрж▓рж╛ржЧржЗржи",
      SubTitle: (count: number) => `${count} ржЯрж┐ ржкрзНрж▓рж╛ржЧржЗржи`,
      Search: "ржкрзНрж▓рж╛ржЧржЗржи ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи",
      Create: "ржирждрзБржи рждрзИрж░рж┐ ржХрж░рзБржи",
      Find: "ржЖржкржирж┐ Github ржП ржЪржорзОржХрж╛рж░ ржкрзНрж▓рж╛ржЧржЗржиржЧрзБрж▓рж┐ ржЦрзБржБржЬрзЗ ржкрзЗрждрзЗ ржкрж╛рж░рзЗржи:",
    },
    Item: {
      Info: (count: number) => `${count} ржЯрж┐ ржкржжрзНржзрждрж┐`,
      View: "ржжрзЗржЦрзБржи",
      Edit: "рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
      Delete: "ржорзБржЫрзЗ ржлрзЗрж▓рзБржи",
      DeleteConfirm: "ржорзБржЫрзЗ ржлрзЗрж▓рждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
    },
    Auth: {
      None: "ржЕржирзБржорзЛржжржи ржкрзНрж░ржпрж╝рзЛржЬржи ржирзЗржЗ",
      Basic: "Basic",
      Bearer: "Bearer",
      Custom: "ржХрж╛рж╕рзНржЯржо",
      CustomHeader: "ржХрж╛рж╕рзНржЯржо ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржирж╛ржо",
      Token: "Token",
      Proxy: "ржкрзНрж░ржХрзНрж╕рж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
      ProxyDescription: "CORS рждрзНрж░рзБржЯрж┐ рж╕ржорж╛ржзрж╛ржирзЗрж░ ржЬржирзНржп ржкрзНрж░ржХрзНрж╕рж┐ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
      Location: "ржЕржмрж╕рзНржерж╛ржи",
      LocationHeader: "Header",
      LocationQuery: "Query",
      LocationBody: "Body",
    },
    EditModal: {
      Title: (readonly: boolean) =>
        `ржкрзНрж▓рж╛ржЧржЗржи рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи ${readonly ? "я╝Ирж╢рзБржзрзБржорж╛рждрзНрж░ ржкржбрж╝рж╛рж░ ржЬржирзНржпя╝Й" : ""}`,
      Download: "ржбрж╛ржЙржирж▓рзЛржб",
      Auth: "ржЕржирзБржорзЛржжржирзЗрж░ ржкржжрзНржзрждрж┐",
      Content: "OpenAPI Schema",
      Load: "ржУржпрж╝рзЗржм ржерзЗржХрзЗ рж▓рзЛржб ржХрж░рзБржи",
      Method: "ржкржжрзНржзрждрж┐",
      Error: "ржлрж░ржорзНржпрж╛ржЯ рждрзНрж░рзБржЯрж┐",
    },
  },
  Mask: {
    Name: "ржорж╛рж╕рзНржХ",
    Page: {
      Title: "ржкрзНрж░рж┐рж╕рзЗржЯ ржЪрж░рж┐рждрзНрж░ ржорж╛рж╕рзНржХ",
      SubTitle: (count: number) => `${count} ржЯрж┐ ржкрзНрж░рж┐рж╕рзЗржЯ ржЪрж░рж┐рждрзНрж░ рж╕ржВржЬрзНржЮрж╛`,
      Search: "ржЪрж░рж┐рждрзНрж░ ржорж╛рж╕рзНржХ ржЕржирзБрж╕ржирзНржзрж╛ржи ржХрж░рзБржи",
      Create: "ржирждрзБржи рждрзИрж░рж┐ ржХрж░рзБржи",
    },
    Item: {
      Info: (count: number) => `${count} ржЯрж┐ ржкрзНрж░рж┐рж╕рзЗржЯ ржХржерзЛржкржХржержи ржЕржирзНрждрж░рзНржнрзБржХрзНржд`,
      Chat: "ржХржерзЛржкржХржержи",
      View: "ржжрзЗржЦрзБржи",
      Edit: "рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
      Delete: "ржорзБржЫрзЗ ржлрзЗрж▓рзБржи",
      DeleteConfirm: "ржорзБржЫрзЗ ржлрзЗрж▓рждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
    },
    EditModal: {
      Title: (readonly: boolean) =>
        `ржкрзНрж░рж┐рж╕рзЗржЯ ржорж╛рж╕рзНржХ рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи ${
          readonly ? "я╝Ирж╢рзБржзрзБржорж╛рждрзНрж░ ржкржбрж╝рж╛рж░ ржЬржирзНржпя╝Й" : ""
        }`,
      Download: "ржкрзНрж░рж┐рж╕рзЗржЯ ржбрж╛ржЙржирж▓рзЛржб ржХрж░рзБржи",
      Clone: "ржкрзНрж░рж┐рж╕рзЗржЯ ржХрзНрж▓рзЛржи ржХрж░рзБржи",
    },
    Config: {
      Avatar: "ржЪрж░рж┐рждрзНрж░ ржЕржмрждрж╛рж░",
      Name: "ржЪрж░рж┐рждрзНрж░рзЗрж░ ржирж╛ржо",
      Sync: {
        Title: "ржЧрзНрж▓рзЛржмрж╛рж▓ рж╕рзЗржЯрж┐ржВрж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░рзБржи",
        SubTitle: "ржмрж░рзНрждржорж╛ржи ржХржерзЛржкржХржержи ржЧрзНрж▓рзЛржмрж╛рж▓ ржоржбрзЗрж▓ рж╕рзЗржЯрж┐ржВрж╕ ржмрзНржпржмрж╣рж╛рж░ ржХрж░ржмрзЗ ржХрж┐ржирж╛",
        Confirm:
          "ржмрж░рзНрждржорж╛ржи ржХржерзЛржкржХржержирзЗрж░ ржХрж╛рж╕рзНржЯржо рж╕рзЗржЯрж┐ржВрж╕ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржУржнрж╛рж░рж░рж╛ржЗржЯ рж╣ржмрзЗ, ржЧрзНрж▓рзЛржмрж╛рж▓ рж╕рзЗржЯрж┐ржВрж╕ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
      },
      HideContext: {
        Title: "ржкрзНрж░рж┐рж╕рзЗржЯ ржХржерзЛржкржХржержи рж▓рзБржХрж╛ржи",
        SubTitle:
          "рж▓рзБржХрж╛ржирзЛрж░ ржкрж░рзЗ ржкрзНрж░рж┐рж╕рзЗржЯ ржХржерзЛржкржХржержи ржЪрзНржпрж╛ржЯ ржЗржирзНржЯрж╛рж░ржлрзЗрж╕рзЗ ржкрзНрж░ржжрж░рзНрж╢рж┐ржд рж╣ржмрзЗ ржирж╛",
      },
      Artifacts: {
        Title: "Artifacts рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
        SubTitle: "рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рж╛рж░ ржкрж░рзЗ рж╕рж░рж╛рж╕рж░рж┐ HTML ржкрзГрж╖рзНржарж╛ рж░рзЗржирзНржбрж╛рж░ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи",
      },
      CodeFold: {
        Title: "ржХрзЛржб ржлрзЛрж▓рзНржб рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рзБржи",
        SubTitle:
          "рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рж╛рж░ ржкрж░рзЗ ржжрзАрж░рзНржШ ржХрзЛржб ржмрзНрж▓ржХ рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржлрзЛрж▓рзНржб/ржЖржиржлрзЛрж▓рзНржб ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржи",
      },
      Share: {
        Title: "ржПржЗ ржорж╛рж╕рзНржХ рж╢рзЗржпрж╝рж╛рж░ ржХрж░рзБржи",
        SubTitle: "ржПржЗ ржорж╛рж╕рзНржХрзЗрж░ рж╕рж░рж╛рж╕рж░рж┐ рж▓рж┐ржЩрзНржХ рждрзИрж░рж┐ ржХрж░рзБржи",
        Action: "рж▓рж┐ржЩрзНржХ ржХржкрж┐ ржХрж░рзБржи",
      },
    },
  },
  NewChat: {
    Return: "ржлрж┐рж░рзЗ ржпрж╛ржи",
    Skip: "рж╕рж░рж╛рж╕рж░рж┐ рж╢рзБрж░рзБ ржХрж░рзБржи",
    NotShow: "ржЖрж░ ржжрзЗржЦрж╛ржмрзЗржи ржирж╛",
    ConfirmNoShow:
      "ржирж┐рж╖рзНржХрзНрж░рж┐ржпрж╝ ржХрж░рждрзЗ ржирж┐рж╢рзНржЪрж┐ржд? ржирж┐рж╖рзНржХрзНрж░рж┐ржпрж╝ ржХрж░рж╛рж░ ржкрж░рзЗ рж╕рзЗржЯрж┐ржВрж╕рзЗ ржкрзБржирж░рж╛ржпрж╝ рж╕ржХрзНрж░рж┐ржпрж╝ ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗржиред",
    Title: "ржПржХржЯрж┐ ржорж╛рж╕рзНржХ ржирж┐рж░рзНржмрж╛ржЪржи ржХрж░рзБржи",
    SubTitle: "ржПржЦржи рж╢рзБрж░рзБ ржХрж░рзБржи, ржорж╛рж╕рзНржХрзЗрж░ ржкрж┐ржЫржирзЗрж░ ржЖрждрзНржорж╛рж░ рж╕рж╛ржерзЗ ржЪрж┐ржирзНрждрж╛рж░ рж╕ржВржШрж░рзНрж╖",
    More: "рж╕ржм ржжрзЗржЦрзБржи",
  },

  URLCommand: {
    Code: "рж▓рж┐ржЩрзНржХрзЗ ржЕрзНржпрж╛ржХрзНрж╕рзЗрж╕ ржХрзЛржб ржЕржирзНрждрж░рзНржнрзБржХрзНржд рж░ржпрж╝рзЗржЫрзЗ, рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржкрзВрж░ржг ржХрж░рждрзЗ ржЪрж╛ржи?",
    Settings:
      "рж▓рж┐ржЩрзНржХрзЗ ржкрзНрж░рж┐рж╕рзЗржЯ рж╕рзЗржЯрж┐ржВрж╕ ржЕржирзНрждрж░рзНржнрзБржХрзНржд рж░ржпрж╝рзЗржЫрзЗ, рж╕рзНржмржпрж╝ржВржХрзНрж░рж┐ржпрж╝ржнрж╛ржмрзЗ ржкрзВрж░ржг ржХрж░рждрзЗ ржЪрж╛ржи?",
  },

  UI: {
    Confirm: "ржирж┐рж╢рзНржЪрж┐ржд ржХрж░рзБржи",
    Cancel: "ржмрж╛рждрж┐рж▓ ржХрж░рзБржи",
    Close: "ржмржирзНржз ржХрж░рзБржи",
    Create: "ржирждрзБржи рждрзИрж░рж┐ ржХрж░рзБржи",
    Edit: "рж╕ржорзНржкрж╛ржжржирж╛ ржХрж░рзБржи",
    Export: "рж░ржкрзНрждрж╛ржирж┐ ржХрж░рзБржи",
    Import: "ржЖржоржжрж╛ржирж┐ ржХрж░рзБржи",
    Sync: "рж╕рж┐ржЩрзНржХ ржХрж░рзБржи",
    Config: "ржХржиржлрж┐ржЧрж╛рж░ ржХрж░рзБржи",
  },
  Exporter: {
    Description: {
      Title: "рж╢рзБржзрзБржорж╛рждрзНрж░ ржкрзНрж░рж╕ржЩрзНржЧ ржорзБржЫрзЗ ржлрзЗрж▓рж╛рж░ ржкрж░рзЗ ржмрж╛рж░рзНрждрж╛ ржкрзНрж░ржжрж░рзНрж╢рж┐ржд рж╣ржмрзЗ",
    },
    Model: "ржоржбрзЗрж▓",
    Messages: "ржмрж╛рж░рзНрждрж╛",
    Topic: "ржмрж┐рж╖ржпрж╝",
    Time: "рж╕ржоржпрж╝",
  },
  SdPanel: {
    Prompt: "ржЪрж┐рждрзНрж░ ржкрзНрж░ржорзНржкржЯ",
    NegativePrompt: "ржирзЗрждрж┐ржмрж╛ржЪржХ ржкрзНрж░ржорзНржкржЯ",
    PleaseInput: (name: string) => `ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ${name} ржкрзНрж░ржмрзЗрж╢ ржХрж░рзБржи`,
    AspectRatio: "ржЖржирзБржкрж╛рждрж┐ржХ рж╣рж╛рж░",
    ImageStyle: "ржЪрж┐рждрзНрж░ рж╢рзИрж▓рзА",
    OutFormat: "ржЖржЙржЯржкрзБржЯ ржлрж░ржорзНржпрж╛ржЯ",
    AIModel: "AI ржоржбрзЗрж▓",
    ModelVersion: "ржоржбрзЗрж▓ рж╕ржВрж╕рзНржХрж░ржг",
    Submit: "ржЬржорж╛ ржжрж┐ржи",
    ParamIsRequired: (name: string) => `${name} ржкрзНрж░ржпрж╝рзЛржЬржирзАржпрж╝`,
    Styles: {
      D3Model: "3D ржоржбрзЗрж▓",
      AnalogFilm: "ржЕрзНржпрж╛ржирж╛рж▓ржЧ ржлрж┐рж▓рзНржо",
      Anime: "ржЕрзНржпрж╛ржирж┐ржорзЗ",
      Cinematic: "рж╕рж┐ржирзЗржорж╛ржЯрж┐ржХ",
      ComicBook: "ржХржорж┐ржХ ржмржЗ",
      DigitalArt: "ржбрж┐ржЬрж┐ржЯрж╛рж▓ ржЖрж░рзНржЯ",
      Enhance: "ржЙржирзНржиржд ржХрж░рзБржи",
      FantasyArt: "ржлрзНржпрж╛ржирзНржЯрж╛рж╕рж┐ ржЖрж░рзНржЯ",
      Isometric: "ржЖржЗрж╕рзЛржорзЗржЯрзНрж░рж┐ржХ",
      LineArt: "рж▓рж╛ржЗржи ржЖрж░рзНржЯ",
      LowPoly: "рж▓рзЛ ржкрж▓рж┐",
      ModelingCompound: "ржоржбрзЗрж▓рж┐ржВ ржХржорзНржкрж╛ржЙржирзНржб",
      NeonPunk: "ржирж┐ржпрж╝ржи ржкрж╛ржЩрзНржХ",
      Origami: "ржУрж░рж┐ржЧрж╛ржорж┐",
      Photographic: "ржлржЯрзЛржЧрзНрж░рж╛ржлрж┐ржХ",
      PixelArt: "ржкрж┐ржХрзНрж╕рзЗрж▓ ржЖрж░рзНржЯ",
      TileTexture: "ржЯрж╛ржЗрж▓ ржЯрзЗржХрзНрж╕ржЪрж╛рж░",
    },
  },
  Sd: {
    SubTitle: (count: number) => `ржорзЛржЯ ${count} ржЯрж┐ ржЪрж┐рждрзНрж░`,
    Actions: {
      Params: "ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ ржжрзЗржЦрзБржи",
      Copy: "ржкрзНрж░ржорзНржкржЯ ржХржкрж┐ ржХрж░рзБржи",
      Delete: "ржорзБржЫрзЗ ржлрзЗрж▓рзБржи",
      Retry: "ржкрзБржирж░рж╛ржпрж╝ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржи",
      ReturnHome: "рж╣рзЛржорзЗ ржлрж┐рж░рзЗ ржпрж╛ржи",
      History: "ржЗрждрж┐рж╣рж╛рж╕ ржжрзЗржЦрзБржи",
    },
    EmptyRecord: "ржХрзЛржи ржЪрж┐рждрзНрж░ рж░рзЗржХрж░рзНржб ржирзЗржЗ",
    Status: {
      Name: "ржЕржмрж╕рзНржерж╛",
      Success: "рж╕ржлрж▓",
      Error: "рждрзНрж░рзБржЯрж┐",
      Wait: "ржЕржкрзЗржХрзНрж╖рж╛ ржХрж░ржЫрзЗ",
      Running: "ржЪрж▓ржорж╛ржи",
    },
    Danger: {
      Delete: "ржорзБржЫрзЗ ржлрзЗрж▓рждрзЗ ржирж┐рж╢рзНржЪрж┐ржд?",
    },
    GenerateParams: "ржкрзНржпрж╛рж░рж╛ржорж┐ржЯрж╛рж░ рждрзИрж░рж┐ ржХрж░рзБржи",
    Detail: "ржмрж┐рж╕рзНрждрж╛рж░рж┐ржд",
  },
};

type DeepPartial<T> = T extends object
  ? {
      [P in keyof T]?: DeepPartial<T[P]>;
    }
  : T;

export type LocaleType = typeof bn;
export type PartialLocaleType = DeepPartial<typeof bn>;

export default bn;
